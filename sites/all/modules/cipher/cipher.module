<?php

function cipher_menu() {
    $items['cipher'] = array(
        'title' => 'Cipher this!',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
        $items['cipher_success_page'] = array(
        'title' => 'Message Ciphered',
        'page callback' => 'cipher_success',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function cipher_form() {
    $form['phrase'] = array(
        '#title' => 'Words to cipher',
        '#type' => 'textfield',
        '#description' => t(''),
        '#element_validate' => array('element_validate_phrase'),
        '#required' => TRUE,
    );

    $form['shift_value'] = array(
        '#title' => 'How many spots would you like this to be shifted?',
        '#type' => 'textfield',
        '#description' => t(''),
        '#required' => TRUE,
        '#element_validate' => array('element_validate_integer_positive'),

    );

    $form['shift_direction'] = array(
        '#title' => 'Which direction would you like your phrase to be shifted? Left or Right?',
        '#type' => 'textfield',
        '#description' => t(''),
        '#element_validate' => array('element_validate_direction'),
        '#required' => TRUE,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Go',
    );

    return $form;
}

function element_validate_direction($element) {
    if (!(strtolower($element['#value']) == 'right' || strtolower($element['#value']) == 'left')){
    form_error($element, t('Please choose either left or right.'));
    }
}

function element_validate_phrase($element) {
    if (preg_match("/[~@#$%^&\*()_+={}|<>\/\`0-9\\\\]/", $element['#value'])) {
    form_error($element, t('Please use only letters, or regular punctuation.'));
    }
}


function cipher_form_submit($form, &$form_state) {

    $phrase = strtolower($form_state['values']['phrase']);
    $shift_value = $form_state['values']['shift_value'];
    $shift_direction = $form_state['values']['shift_direction'];

    $split_input = str_split($phrase);

    $alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');

    $answer = array();

    foreach($split_input as &$value) {
        if(in_array($value, $alphabet)) {
            $index = array_search($value, $alphabet);
            if($shift_direction === 'right') {
                if($index + $shift_value > 25) {
                    $index = 26 - $index;
                    $new_index = $shift_value - $index;
                    $letter = $alphabet[$new_index];
                    array_push($answer, $letter);
                } else {
                    $new_index = $index + $shift_value;
                    $letter = $alphabet[$new_index];
                    array_push($answer, $letter);
                }
            }
            if($shift_direction === 'left') {
                if($index - $shift_value < 0) {
                    $index = 26 + $index;
                    $new_index = $index - $shift_value;
                    $letter = $alphabet[$new_index];
                    array_push($answer, $letter);
                } else {
                    $new_index = $index - $shift_value;
                    $letter = $alphabet[$new_index];
                    array_push($answer, $letter);
                }
            }
            else {
                array_push($answer, $letter);
            }
        }
    }
    $answer = implode(' ', $answer);
    echo '<pre>';
    var_dump($answer);
    echo '</pre>';
    exit;
}
